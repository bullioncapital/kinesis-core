# Build stage, includes everything needed to build.
FROM ubuntu:focal as buildstage
ENV DEBIAN_FRONTEND=noninteractive
 
# setup apt / certificates
RUN apt-get update \
     && apt-get -y install --no-install-recommends git apt-utils dialog ca-certificates 2>&1
# 
# # install base container packages and prep for VSCode
# RUN apt-get -y install iproute2 procps lsb-release
# 
# # install tool chain
# RUN apt-get -y install libstdc++-8-dev clang-format-10 ccache
# 
# # clang
# RUN apt-get -y install clang-10 llvm-10
# 
# # install dependencies
# RUN apt-get -y install git build-essential pkg-config autoconf automake libtool bison flex libpq-dev parallel libunwind-dev perl
# 
# # install postgresql to enable tests under make check
# RUN apt-get -y install postgresql
# 
# # Set up locale
# RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && locale-gen
# 
# ENV LANG en_US.UTF-8
# ENV LANGUAGE en_US:en
# ENV LC_ALL en_US.UTF-8
# 
# ENV USERNAME=postgres
# RUN apt-get -y install sudo \
#     && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME\
#     && chmod 0440 /etc/sudoers.d/$USERNAME

USER postgres
COPY . /stellar-core
WORKDIR /stellar-core

RUN sudo chown -R postgres /stellar-core && git clean -dxf
RUN git submodule foreach --recursive git clean -dxf
# 
# ENV CC=clang-10
# ENV CXX=clang++-10
# ENV CFLAGS='-O3 -g1 -fno-omit-frame-pointer'
# ENV CXXFLAGS='-w -O3 -g1 -D_KINESIS'
# ENV CONFIGURE_FLAGS='--enable-asan --enable-extrachecks --enable-ccache --enable-sdfprefs'
# 
# RUN ./autogen.sh
# RUN ./configure CC="${CC}" CXX="${CXX}" CFLAGS="${CFLAGS}" CXXFLAGS="${CXXFLAGS}" ${CONFIGURE_FLAGS}
# RUN sh -c 'make check -j $(nproc)'
# RUN sudo make install
# 
# # Patch stellar-core official docker image
# # Because we need more than just stellar-core
# FROM stellar/stellar-core:17
# 
# COPY --from=buildstage /usr/local/bin/stellar-core /usr/bin/stellar-core
